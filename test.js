// Generated by CoffeeScript 2.7.0
var ass, echo;

echo = console.log;

ass = function(a, b) {
  if (_.isEqual(a, b)) {
    return;
  }
  echo('Assertion failed: (open the Assertion below to find the failing assertion)');
  echo('  expect', JSON.stringify(a));
  echo('  actual', JSON.stringify(b));
  return console.assert(false); // can be used to track the assert
};

ass(7, 3 + 4);

import {
  expand
} from './tournament.js';

ass([[[1, 2], [3, 4]], [[2, 1], [4, 3]], [[1, 4], [2, 3]], [[4, 1], [3, 2]]], expand(2, [[[1, 2], [3, 4]], [[1, 4], [2, 3]]]));

import {
  findNumberOfDecimals
} from './tournament.js';

ass(0, findNumberOfDecimals([1200, 1200]));

ass(0, findNumberOfDecimals([1200, 1201]));

ass(0, findNumberOfDecimals([1200.23, 1200.23]));

ass(1, findNumberOfDecimals([1200.23, 1200.3]));

ass(1, findNumberOfDecimals([1200.23, 1200.3]));

ass(3, findNumberOfDecimals([1200.23, 1200.2345]));

ass(0, findNumberOfDecimals([1200.12345, 1200.12345]));

import {
  longForm
} from './tournament.js';

import {
  // ass [
  // 	[ 0,11,'w','F']
  // 	[ 1,10,'w','0']
  // 	[ 2, 9,'w','r']
  // 	[ 3, 8,'w','1']
  // 	[ 4, 7,'w','0']
  // 	[ 5, 6,'w','r']
  // 	[ 6, 5,'b','r']
  // 	[ 7, 4,'b','1']
  // 	[ 8, 3,'b','0']
  // 	[ 9, 2,'b','r']
  // 	[10, 1,'b','1']
  // 	[11, 0,'b','1']
  // ], longForm [[1,10], [2,9], [3,8], [4,7], [5,6], [0,11]], "0r10r"
  // ass [[1,10,"0"], [2,9,"r"], [3,8,"1"], [4,7,"0"], [5,6,"r"], [0,11,"x"]], longForm [[1,10], [2,9], [3,8], [4,7], [5,6], [0,11]], "0r10rx"
  other
} from './tournament.js';

ass('2', other('0'));

ass('1', other('1'));

ass('0', other('2'));

ass('2', other('F'));

ass('2', other('G'));

ass('x', other('x'));

import {
  prettyResult
} from './tournament.js';

ass("-", prettyResult('x'));

ass("0 - 1", prettyResult('0'));

ass("½ - ½", prettyResult('1'));

ass("1 - 0", prettyResult('2'));

// import {shortForm} from './tournament.js'
// ass [[1,10,"0"], [2,9,"r"], [3,8,"1"], [4,7,"0"], [5,6,"r"], [0,11,"F"]], shortForm [[1,10], [2,9], [3,8], [4,7], [5,6], [0,11]], "0r10r"
// ass [[1,10,"0"], [2,9,"r"], [3,8,"1"], [4,7,"0"], [5,6,"r"], [0,11,"x"]], shortForm [[1,10], [2,9], [3,8], [4,7], [5,6], [0,11]], "0r10rx"
echo('Ready!');

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5qcyIsInNvdXJjZVJvb3QiOiJcXCIsInNvdXJjZXMiOlsidGVzdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsR0FBQSxFQUFBOztBQUFBLElBQUEsR0FBTyxPQUFPLENBQUM7O0FBRWYsR0FBQSxHQUFNLFFBQUEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBO0VBQ0wsSUFBRyxDQUFDLENBQUMsT0FBRixDQUFVLENBQVYsRUFBYSxDQUFiLENBQUg7QUFBdUIsV0FBdkI7O0VBQ0EsSUFBQSxDQUFLLDRFQUFMO0VBQ0EsSUFBQSxDQUFLLFVBQUwsRUFBaUIsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFmLENBQWpCO0VBQ0EsSUFBQSxDQUFLLFVBQUwsRUFBaUIsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFmLENBQWpCO1NBQ0EsT0FBTyxDQUFDLE1BQVIsQ0FBZSxLQUFmLEVBTEs7QUFBQTs7QUFNTixHQUFBLENBQUksQ0FBSixFQUFPLENBQUEsR0FBSSxDQUFYOztBQUVBLE9BQUE7RUFBUSxNQUFSO0NBQUEsTUFBQTs7QUFDQSxHQUFBLENBQUksQ0FBQyxDQUFDLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBRCxFQUFPLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBUCxDQUFELEVBQWUsQ0FBQyxDQUFDLENBQUQsRUFBRyxDQUFILENBQUQsRUFBTyxDQUFDLENBQUQsRUFBRyxDQUFILENBQVAsQ0FBZixFQUE2QixDQUFDLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBRCxFQUFPLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBUCxDQUE3QixFQUEyQyxDQUFDLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBRCxFQUFPLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBUCxDQUEzQyxDQUFKLEVBQStELE1BQUEsQ0FBTyxDQUFQLEVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBRCxFQUFPLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBUCxDQUFELEVBQWdCLENBQUMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFELEVBQU8sQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFQLENBQWhCLENBQVYsQ0FBL0Q7O0FBRUEsT0FBQTtFQUFRLG9CQUFSO0NBQUEsTUFBQTs7QUFDQSxHQUFBLENBQUksQ0FBSixFQUFPLG9CQUFBLENBQXFCLENBQUMsSUFBRCxFQUFNLElBQU4sQ0FBckIsQ0FBUDs7QUFDQSxHQUFBLENBQUksQ0FBSixFQUFPLG9CQUFBLENBQXFCLENBQUMsSUFBRCxFQUFNLElBQU4sQ0FBckIsQ0FBUDs7QUFDQSxHQUFBLENBQUksQ0FBSixFQUFPLG9CQUFBLENBQXFCLENBQUMsT0FBRCxFQUFTLE9BQVQsQ0FBckIsQ0FBUDs7QUFDQSxHQUFBLENBQUksQ0FBSixFQUFPLG9CQUFBLENBQXFCLENBQUMsT0FBRCxFQUFTLE1BQVQsQ0FBckIsQ0FBUDs7QUFDQSxHQUFBLENBQUksQ0FBSixFQUFPLG9CQUFBLENBQXFCLENBQUMsT0FBRCxFQUFTLE1BQVQsQ0FBckIsQ0FBUDs7QUFDQSxHQUFBLENBQUksQ0FBSixFQUFPLG9CQUFBLENBQXFCLENBQUMsT0FBRCxFQUFTLFNBQVQsQ0FBckIsQ0FBUDs7QUFDQSxHQUFBLENBQUksQ0FBSixFQUFPLG9CQUFBLENBQXFCLENBQUMsVUFBRCxFQUFZLFVBQVosQ0FBckIsQ0FBUDs7QUFFQSxPQUFBO0VBQVEsUUFBUjtDQUFBLE1BQUE7O0FBaUJBLE9BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFBUSxLQUFSO0NBQUEsTUFBQTs7QUFDQSxHQUFBLENBQUksR0FBSixFQUFTLEtBQUEsQ0FBTSxHQUFOLENBQVQ7O0FBQ0EsR0FBQSxDQUFJLEdBQUosRUFBUyxLQUFBLENBQU0sR0FBTixDQUFUOztBQUNBLEdBQUEsQ0FBSSxHQUFKLEVBQVMsS0FBQSxDQUFNLEdBQU4sQ0FBVDs7QUFDQSxHQUFBLENBQUksR0FBSixFQUFTLEtBQUEsQ0FBTSxHQUFOLENBQVQ7O0FBQ0EsR0FBQSxDQUFJLEdBQUosRUFBUyxLQUFBLENBQU0sR0FBTixDQUFUOztBQUNBLEdBQUEsQ0FBSSxHQUFKLEVBQVMsS0FBQSxDQUFNLEdBQU4sQ0FBVDs7QUFFQSxPQUFBO0VBQVEsWUFBUjtDQUFBLE1BQUE7O0FBQ0EsR0FBQSxDQUFJLEdBQUosRUFBYSxZQUFBLENBQWEsR0FBYixDQUFiOztBQUNBLEdBQUEsQ0FBSSxPQUFKLEVBQWEsWUFBQSxDQUFhLEdBQWIsQ0FBYjs7QUFDQSxHQUFBLENBQUksT0FBSixFQUFhLFlBQUEsQ0FBYSxHQUFiLENBQWI7O0FBQ0EsR0FBQSxDQUFJLE9BQUosRUFBYSxZQUFBLENBQWEsR0FBYixDQUFiLEVBbkRBOzs7OztBQXlEQSxJQUFBLENBQUssUUFBTCIsInNvdXJjZXNDb250ZW50IjpbImVjaG8gPSBjb25zb2xlLmxvZ1xyXG5cclxuYXNzID0gKGEsYikgLT5cclxuXHRpZiBfLmlzRXF1YWwgYSwgYiB0aGVuIHJldHVyblxyXG5cdGVjaG8gJ0Fzc2VydGlvbiBmYWlsZWQ6IChvcGVuIHRoZSBBc3NlcnRpb24gYmVsb3cgdG8gZmluZCB0aGUgZmFpbGluZyBhc3NlcnRpb24pJ1xyXG5cdGVjaG8gJyAgZXhwZWN0JywgSlNPTi5zdHJpbmdpZnkgYSBcclxuXHRlY2hvICcgIGFjdHVhbCcsIEpTT04uc3RyaW5naWZ5IGJcclxuXHRjb25zb2xlLmFzc2VydCBmYWxzZSAjIGNhbiBiZSB1c2VkIHRvIHRyYWNrIHRoZSBhc3NlcnRcclxuYXNzIDcsIDMgKyA0XHJcblxyXG5pbXBvcnQge2V4cGFuZH0gZnJvbSAnLi90b3VybmFtZW50LmpzJ1xyXG5hc3MgW1tbMSwyXSxbMyw0XV0sW1syLDFdLFs0LDNdXSxbWzEsNF0sWzIsM11dLFtbNCwxXSxbMywyXV1dLCBleHBhbmQgMiwgW1tbMSwyXSxbMyw0XV0sIFtbMSw0XSxbMiwzXV1dXHJcblxyXG5pbXBvcnQge2ZpbmROdW1iZXJPZkRlY2ltYWxzfSBmcm9tICcuL3RvdXJuYW1lbnQuanMnXHJcbmFzcyAwLCBmaW5kTnVtYmVyT2ZEZWNpbWFscyBbMTIwMCwxMjAwXVxyXG5hc3MgMCwgZmluZE51bWJlck9mRGVjaW1hbHMgWzEyMDAsMTIwMV1cclxuYXNzIDAsIGZpbmROdW1iZXJPZkRlY2ltYWxzIFsxMjAwLjIzLDEyMDAuMjNdXHJcbmFzcyAxLCBmaW5kTnVtYmVyT2ZEZWNpbWFscyBbMTIwMC4yMywxMjAwLjNdXHJcbmFzcyAxLCBmaW5kTnVtYmVyT2ZEZWNpbWFscyBbMTIwMC4yMywxMjAwLjNdXHJcbmFzcyAzLCBmaW5kTnVtYmVyT2ZEZWNpbWFscyBbMTIwMC4yMywxMjAwLjIzNDVdXHJcbmFzcyAwLCBmaW5kTnVtYmVyT2ZEZWNpbWFscyBbMTIwMC4xMjM0NSwxMjAwLjEyMzQ1XVxyXG5cclxuaW1wb3J0IHtsb25nRm9ybX0gZnJvbSAnLi90b3VybmFtZW50LmpzJ1xyXG4jIGFzcyBbXHJcbiMgXHRbIDAsMTEsJ3cnLCdGJ11cclxuIyBcdFsgMSwxMCwndycsJzAnXVxyXG4jIFx0WyAyLCA5LCd3JywnciddXHJcbiMgXHRbIDMsIDgsJ3cnLCcxJ11cclxuIyBcdFsgNCwgNywndycsJzAnXVxyXG4jIFx0WyA1LCA2LCd3JywnciddXHJcbiMgXHRbIDYsIDUsJ2InLCdyJ11cclxuIyBcdFsgNywgNCwnYicsJzEnXVxyXG4jIFx0WyA4LCAzLCdiJywnMCddXHJcbiMgXHRbIDksIDIsJ2InLCdyJ11cclxuIyBcdFsxMCwgMSwnYicsJzEnXVxyXG4jIFx0WzExLCAwLCdiJywnMSddXHJcbiMgXSwgbG9uZ0Zvcm0gW1sxLDEwXSwgWzIsOV0sIFszLDhdLCBbNCw3XSwgWzUsNl0sIFswLDExXV0sIFwiMHIxMHJcIlxyXG4jIGFzcyBbWzEsMTAsXCIwXCJdLCBbMiw5LFwiclwiXSwgWzMsOCxcIjFcIl0sIFs0LDcsXCIwXCJdLCBbNSw2LFwiclwiXSwgWzAsMTEsXCJ4XCJdXSwgbG9uZ0Zvcm0gW1sxLDEwXSwgWzIsOV0sIFszLDhdLCBbNCw3XSwgWzUsNl0sIFswLDExXV0sIFwiMHIxMHJ4XCJcclxuXHJcbmltcG9ydCB7b3RoZXJ9IGZyb20gJy4vdG91cm5hbWVudC5qcydcclxuYXNzICcyJywgb3RoZXIgJzAnXHJcbmFzcyAnMScsIG90aGVyICcxJ1xyXG5hc3MgJzAnLCBvdGhlciAnMidcclxuYXNzICcyJywgb3RoZXIgJ0YnXHJcbmFzcyAnMicsIG90aGVyICdHJ1xyXG5hc3MgJ3gnLCBvdGhlciAneCdcclxuXHJcbmltcG9ydCB7cHJldHR5UmVzdWx0fSBmcm9tICcuL3RvdXJuYW1lbnQuanMnXHJcbmFzcyBcIi1cIiwgICAgIHByZXR0eVJlc3VsdCAneCdcclxuYXNzIFwiMCAtIDFcIiwgcHJldHR5UmVzdWx0ICcwJ1xyXG5hc3MgXCLCvSAtIMK9XCIsIHByZXR0eVJlc3VsdCAnMSdcclxuYXNzIFwiMSAtIDBcIiwgcHJldHR5UmVzdWx0ICcyJ1xyXG5cclxuIyBpbXBvcnQge3Nob3J0Rm9ybX0gZnJvbSAnLi90b3VybmFtZW50LmpzJ1xyXG4jIGFzcyBbWzEsMTAsXCIwXCJdLCBbMiw5LFwiclwiXSwgWzMsOCxcIjFcIl0sIFs0LDcsXCIwXCJdLCBbNSw2LFwiclwiXSwgWzAsMTEsXCJGXCJdXSwgc2hvcnRGb3JtIFtbMSwxMF0sIFsyLDldLCBbMyw4XSwgWzQsN10sIFs1LDZdLCBbMCwxMV1dLCBcIjByMTByXCJcclxuIyBhc3MgW1sxLDEwLFwiMFwiXSwgWzIsOSxcInJcIl0sIFszLDgsXCIxXCJdLCBbNCw3LFwiMFwiXSwgWzUsNixcInJcIl0sIFswLDExLFwieFwiXV0sIHNob3J0Rm9ybSBbWzEsMTBdLCBbMiw5XSwgWzMsOF0sIFs0LDddLCBbNSw2XSwgWzAsMTFdXSwgXCIwcjEwcnhcIlxyXG5cclxuZWNobyAnUmVhZHkhJyJdfQ==
//# sourceURL=c:\github\2025\013-FloatingBerger\test.coffee